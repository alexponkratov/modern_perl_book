=encoding utf-8

=head0 *Предисловие

I<Современный Perl> (I<Modern Perl>) E<mdash> это один из способов описать то,
как работают самые эффективные в мире программисты на Perl 5. Они применяют
идиомы языка. Они пользуются преимуществами CPAN. Они проявляют хороший вкус и
мастерство в написании мощного, поддерживаемого, масштабируемого, лаконичного и
эффективного кода. Вы тоже можете освоить эти навыки!

Perl впервые появился в 1987 году как простой инструмент для системного
администрирования. Начав с объявления и захвата комфортной ниши между написанием
сценариев командной оболочки и программированием на C, он превратился в
семейство мощных универсальных языков. Perl 5 имеет солидную историю прагматизма
и светлое будущее шлифовки и улучшенияN<Perl 6 E<mdash> это изобретение
программирования заново, основанное на прочных принципах Perl, но это тема для
другой книги.>.

На протяжении долгой истории Perl E<mdash> особенно 17-ти лет Perl 5 E<mdash>
наше понимание того, что представляет собой хорошая программа на Perl, менялось.
Хотя вы можете писать эффективные программы, которые никогда не воспользуются
всеми возможностями, предлагаемыми языком, глобальное Perl-сообщество изобрело,
позаимствовало, улучшило и отполировало множество идей, и сделало их доступными
для любого, кто захочет их изучить.

=head1 Запуск Современного Perl

Модуль C<Modern::Perl> из CPAN (L<cpan>) просит Perl предупреждать о
сомнительных конструкциях и опечатках и включает новые возможности,
представленные в современных релизах Perl 5. Если не упомянуто иное, фрагменты
кода всегда будут подразумевать следующий базовый костяк программы:

=begin programlisting

    #!/usr/bin/env perl

    use Modern::Perl 2011;
    use autodie;

=end programlisting

E<hellip>что эквивалентно следующему:

=begin programlisting

    #!/usr/bin/env perl

    use 5.012;      # подразумевает "use strict;"
    use warnings;
    use autodie;

=end programlisting

Некоторые примеры используют функции тестирования, такие как C<ok()>, C<like()>
и C<is()> (L<testing>). Эти программы следуют следующему шаблону:

=begin programlisting

    #!/usr/bin/env perl

    use Modern::Perl;
    B<use Test::More;>

    # здесь код примера

    B<done_testing();>

=end programlisting

На момент написания, текущий стабильный релиз семейства Perl 5 E<mdash>
Perl 5.14. Примеры в этой книге лучше всего работают с версией Perl 5.12.0 или
выше. Многие примеры будут работать на более старых версиях Perl 5 с небольшими
изменениями, но у вас будет больше сложностей с использованием чего-нибудь
старше, чем 5.10.0.

X<Strawberry Perl>
X<ActivePerl>
X<perlbrew>
X<CPAN; C<App::perlbrew>>

Если Perl 5 у вас не установлен (или установлена старая версия), вы можете сами
установить новый релиз. Пользователям Windows нужно скачать Strawberry Perl
с сайта U<http://www.strawberryperl.com/> или ActivePerl с
U<http://www.activestate.com/activeperl>. Пользователям других операционных
систем, где уже установлен Perl 5 (а также компилятор C и другие инструменты
разработчика), стоит начать с установки CPAN-модуля C<App::perlbrew>N<См.
инструкции по установке на U<http://search.cpan.org/perldoc?App::perlbrew.>>.

C<perlbrew> даёт возможность устанавливать и управлять несколькими версиями
Perl 5. Это позволяет вам переключаться между разными версиями Perl 5, а также
устанавливать Perl 5 и CPAN-модули в домашнюю директорию, не затрагивая
системные версии. Если вам когда-нибудь приходилось выпрашивать у вашего
системного администратора разрешение на установку программного обеспечения, вы
знаете, насколько такая возможность облегчит вам жизнь.

=head1 Благодарности

Написание этой книги не было бы возможным без вопросов, комментариев,
предложений, советов, мудрости и поощрения многих, многих людей. Те, кому автор
и редактор особенно благодарны:

L<credits>

Любые оставшиеся ошибки E<mdash> вина упрямого автора.
